---
- name: Create greatoldone user.
  ansible.builtin.user:
    name: "greatoldone"
    # groups: "greatoldone"
    shell: /bin/bash
    home: /home/greatoldone
    create_home: true
    state: present
  tags: users
  become: true

# update to use sudoers
- name: Allow 'greatoldone' group passwordless sudo.
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    backup: true
    regexp: '^%greatoldone'
    line: '%greatoldone ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s
  tags: users
  become: true

- name: Password authentication not allowed.
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    backup: true
    line: 'PasswordAuthentication no'
  tags: ssh
  become: true
  notify:
    - Restart SSH

- name: Password authentication not allowed.
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    state: absent
    backup: true
    line: 'PasswordAuthentication yes'
  tags: ssh
  become: true
  notify:
    - Restart SSH

- name: Ssh as root not allowed.
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    line: 'PermitRootLogin no'
  tags: ssh
  become: true
  notify:
    - Restart SSH

- name: Ssh as root not allowed.
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    state: absent
    line: 'PermitRootLogin yes'
  tags: ssh
  become: true
  notify:
    - Restart SSH

- name: Insert hostnames into hosts file
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    state: present
    line: "{{ item }}"
  with_items: "{{ hosts }}"
  tags: hosts
  become: true

- name: Add ssh key to 'greatoldone'.
  ansible.posix.authorized_key:
    user: greatoldone
    state: present
    key: "{{ item }}"
  with_items: "{{ ssh_keys.goo_key }}"
  tags: users
  become: true

- name: Install relevant packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"
  tags: packages
  become: true
  ignore_errors: true
  notify: 
    - Start firewalld

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  tags: packages

- name: Create thedeep firewall zone
  ansible.posix.firewalld:
    zone: thedeep
    state: present
    permanent: true
  tags: firewall
  become: true
  notify: 
    - Restart firewalld

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  tags: firewall

- name: Add source to thedeep
  ansible.posix.firewalld:
    source: 192.168.50.244
    zone: thedeep
    state: enabled
    permanent: true
    immediate: true
  tags: firewall
  become: true
  notify: 
    - Restart firewalld

- name: Add ssh for thedeep
  ansible.posix.firewalld:
    zone: thedeep
    service: ssh
    state: enabled
    permanent: true
    immediate: true
  tags: firewall
  become: true
  notify: 
    - Restart firewalld

...
